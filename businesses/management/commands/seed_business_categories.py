from businesses.models import Category
from django.core.management.base import BaseCommand


class Command(BaseCommand):
    categories = (
        ("식당", "한식"),
        ("식당", "일식"),
        ("식당", "중식"),
        ("식당", "카페"),
        ("식당", "제과"),
        ("식당", "떡집/캐더링"),
        ("식당", "기타"),
        ("식품점", "식품점"),
        ("병원/약국", "의료원"),
        ("병원/약국", "내과"),
        ("병원/약국", "물리재활/언어치료/통증"),
        ("병원/약국", "발전문"),
        ("병원/약국", "방사선과"),
        ("병원/약국", "비뇨기과"),
        ("병원/약국", "산부인과"),
        ("병원/약국", "성형외과"),
        ("병원/약국", "소아과"),
        ("병원/약국", "수의과"),
        ("병원/약국", "신경/흉곽외과"),
        ("병원/약국", "안과"),
        ("병원/약국", "검안과"),
        ("병원/약국", "외과"),
        ("병원/약국", "이비인후과"),
        ("병원/약국", "정신과"),
        ("병원/약국", "정형외과"),
        ("병원/약국", "피부과"),
        ("병원/약국", "척추신경"),
        ("병원/약국", "치과"),
        ("병원/약국", "치과기공/재료"),
        ("병원/약국", "한의원"),
        ("병원/약국", "모발이식/탈모관리"),
        ("병원/약국", "동물병원"),
        ("병원/약국", "약국"),
        ("병원/약국", "양로원"),
        ("병원/약국", "안경"),
        ("학교/학원/튜터", "노인학교"),
        ("학교/학원/튜터", "불교대학/한의대학"),
        ("학교/학원/튜터", "신학대학"),
        ("학교/학원/튜터", "일반대학"),
        ("학교/학원/튜터", "한글학교"),
        ("학교/학원/튜터", "꽃꽃이학원"),
        ("학교/학원/튜터", "영어학원"),
        ("학교/학원/튜터", "예능학원"),
        ("학교/학원/튜터", "운전학원"),
        ("학교/학원/튜터", "유치원"),
        ("학교/학원/튜터", "유학원"),
        ("학교/학원/튜터", "종합학원"),
        ("학교/학원/튜터", "종합학원/학자금"),
        ("학교/학원/튜터", "직업기술학원"),
        ("학교/학원/튜터", "컴퓨터학원"),
        ("학교/학원/튜터", "태권도"),
        ("학교/학원/튜터", "골프레슨/미니골프/연습장/용품"),
        ("미용/뷰티", "화장품"),
        ("미용/뷰티", "미용실/이발"),
        ("미용/뷰티", "피부관리/체형관리"),
        ("미용/뷰티", "동물미용센터"),
        ("미용/뷰티", "미용재료"),
        ("변호사/회계사", "변호사"),
        ("변호사/회계사", "회계/공인회계사"),
        ("변호사/회계사", "회계/공인세무사"),
        ("변호사/회계사", "회계/회계사무소"),
        ("은행/보험", "보험"),
        ("은행/보험", "융자"),
        ("은행/보험", "은행/금융기관"),
        ("은행/보험", "증권/투자"),
        ("은행/보험", "송금"),
        ("부동산", "부동산"),
        ("부동산", "부동산감정"),
        ("부동산", "부동산타이틀회사"),
        ("자동차", "매매"),
        ("자동차", "세차장"),
        ("자동차", "정비/바디샵"),
        ("자동차", "토잉서비스"),
        ("여행/숙박/택시", "여행사"),
        ("여행/숙박/택시", "관광버스/택시"),
        ("생활편의", "운송/이삿짐"),
        ("생활편의", "노래방/당구장/PC방/민화방/기원"),
        ("생활편의", "스파/지압"),
        ("생활편의", "보청기"),
        ("생활편의", "인터넷서비스"),
        ("생활편의", "전기공사"),
        ("생활편의", "정수기"),
        ("생활편의", "정원/조경"),
        ("생활편의", "컴퓨터"),
        ("생활편의", "커튼/인테리어"),
        ("생활편의", "카펫"),
        ("생활편의", "피아노조율"),
        ("생활편의", "홈케어"),
        ("생활편의", "스포츠"),
        ("생활편의", "청소/제설"),
        ("생활편의", "잔디기계/수리"),
        ("생활편의", "전자판매/수리"),
        ("생활편의", "전화서비스"),
        ("생활편의", "페인트"),
        ("생활편의", "플러밍"),
        ("기타", "건축/건설"),
        ("기타", "건강제품"),
        ("기타", "가구제작/판매/수리"),
        ("기타", "간판"),
        ("기타", "결혼서비스/폐백"),
        ("기타", "고물상"),
        ("기타", "광고대행/디자인"),
        ("기타", "구두수선"),
        ("기타", "꽃집"),
        ("기타", "냉동/히팅"),
        ("기타", "농장"),
        ("기타", "도난방지"),
        ("기타", "도매/수입/잡화"),
        ("기타", "도매/식품"),
        ("기타", "물판매"),
        ("기타", "번역/통역"),
        ("기타", "보석"),
        ("기타", "봉제"),
        ("기타", "사무기"),
        ("기타", "사진관/비디오촬영"),
        ("기타", "상담"),
        ("기타", "서점"),
        ("기타", "선물센터"),
        ("기타", "세탁장비"),
        ("기타", "소독"),
        ("기타", "식당장비"),
        ("기타", "소방장비"),
        ("기타", "악기"),
        ("기타", "방송/신문/잡지"),
        ("기타", "연회장"),
        ("기타", "열쇠"),
        ("기타", "운명철학/신점"),
        ("기타", "유리"),
        ("기타", "의류/가죽/모피/무스탕"),
        ("기타", "의류/양복"),
        ("기타", "의류/양장"),
        ("기타", "의류/웨딩"),
        ("기타", "의류/유니폼"),
        ("기타", "의류/한복"),
        ("기타", "의류도매"),
        ("기타", "이민"),
        ("기타", "인쇄소"),
        ("기타", "장의사/묘지"),
        ("기타", "전당포"),
        ("기타", "조명기구"),
        ("기타", "철공소"),
        ("기타", "철물점"),
        ("기타", "카드서비스"),
        ("기타", "크레딧교정"),
        ("기타", "탐정"),
        ("기타", "트로피"),
        ("기타", "행사/이벤트"),
        ("기타", "화랑/액자"),
    )

    def handle(self, *args, **kwargs):
        for cat1, cat2 in self.categories:
            Category.objects.get_or_create(category=cat1, subcategory=cat2)
